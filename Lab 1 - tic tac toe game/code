import math

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)):
        return True
    if all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def minimax(board, depth, is_maximizing, ai, human):
    if check_winner(board, ai):
        return 1
    if check_winner(board, human):
        return -1
    if is_full(board):
        return 0

    if is_maximizing:
        best = -math.inf
        for r in range(3):
            for c in range(3):
                if board[r][c] == " ":
                    board[r][c] = ai
                    score = minimax(board, depth + 1, False, ai, human)
                    board[r][c] = " "
                    best = max(best, score)
        return best
    else:
        best = math.inf
        for r in range(3):
            for c in range(3):
                if board[r][c] == " ":
                    board[r][c] = human
                    score = minimax(board, depth + 1, True, ai, human)
                    board[r][c] = " "
                    best = min(best, score)
        return best

def best_move(board, ai, human):
    best_score = -math.inf
    move = None
    for r in range(3):
        for c in range(3):
            if board[r][c] == " ":
                board[r][c] = ai
                score = minimax(board, 0, False, ai, human)
                board[r][c] = " "
                if score > best_score:
                    best_score = score
                    move = (r, c)
    return move

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    human, ai = "X", "O"

    print("Welcome to Tic-Tac-Toe!")
    print("You are X, Computer is O (Unbeatable AI)")
    print_board(board)

    while True:
        # Human move
        try:
            row = int(input("Enter row (0-2): "))
            col = int(input("Enter col (0-2): "))
        except ValueError:
            print("Invalid input. Try again.")
            continue

        if row not in [0,1,2] or col not in [0,1,2] or board[row][col] != " ":
            print("Invalid move! Try again.")
            continue

        board[row][col] = human
        print_board(board)

        if check_winner(board, human):
            print("ðŸŽ‰ You win!")
            break
        if is_full(board):
            print("It's a draw!")
            break

        # Computer move
        print("Computer's turn...")
        row, col = best_move(board, ai, human)
        board[row][col] = ai
        print_board(board)

        if check_winner(board, ai):
            print("ðŸ’» Computer wins!")
            break
        if is_full(board):
            print("It's a draw!")
            break

if __name__ == "__main__":
    tic_tac_toe()
